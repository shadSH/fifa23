FROM php:8.2 as php

# Set environment variables
ENV PHP_OPCACHE_ENABLE=1
ENV PHP_OPCACHE_ENABLE_CLI=0
ENV PHP_OPCACHE_VALIDATE_TIMESTAMPS=0
ENV PHP_OPCACHE_REVALIDATE_FREQ=0

RUN apt-get update && apt-get install -y wget unzip libc-client-dev libkrb5-dev libpq-dev libcurl4-gnutls-dev libaio1 libzip-dev libpng-dev libjpeg-dev libaio-dev && rm -r /var/lib/apt/lists/*
RUN docker-php-ext-configure imap --with-kerberos --with-imap-ssl \
  && docker-php-ext-install imap

RUN curl -o oracle.zip https://download.oracle.com/otn_software/linux/instantclient/219000/instantclient-basic-linux.x64-21.9.0.0.0dbru.zip \
  && unzip oracle.zip -d /usr/lib/oracle/ \
  && rm oracle.zip \
  && curl -o oracle-sdk.zip https://download.oracle.com/otn_software/linux/instantclient/219000/instantclient-sdk-linux.x64-21.9.0.0.0dbru.zip \
  && unzip oracle-sdk.zip -d /usr/lib/oracle/ \
  && rm oracle-sdk.zip \
  && echo /usr/lib/oracle/instantclient_21_9 > /etc/ld.so.conf.d/oracle-instantclient.conf \
  && ldconfig

ENV LD_LIBRARY_PATH /usr/lib/oracle/instantclient_21_9

RUN pecl install -o -f redis \
  && rm -rf /tmp/pear \
  && docker-php-ext-enable redis

RUN docker-php-ext-install zip

RUN docker-php-ext-configure gd \
  --enable-gd \
  --with-jpeg \
    && docker-php-ext-install gd

RUN docker-php-ext-configure oci8 --with-oci8=instantclient,/usr/lib/oracle/instantclient_21_9 \
  && docker-php-ext-install -j$(nproc) oci8

RUN docker-php-ext-install pdo pdo_mysql bcmath pdo_pgsql opcache

RUN apt-get update && apt-get install -y libpq-dev && docker-php-ext-install pdo_mysql pdo_pgsql

RUN docker-php-ext-configure pcntl --enable-pcntl && docker-php-ext-install pcntl

#XDebug
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# Copy configuration files.
COPY ./dockerfiles/php/php.ini /usr/local/etc/php/php.ini


WORKDIR /var/www
#COPY . .

COPY --chown=www-data:www-data . .

# Create laravel caching folders.
RUN mkdir -p /var/www/storage/framework
RUN mkdir -p /var/www/storage/framework/cache
RUN mkdir -p /var/www/storage/framework/testing
RUN mkdir -p /var/www/storage/framework/sessions
RUN mkdir -p /var/www/storage/framework/views

# Fix files ownership.
RUN chown -R www-data /var/www/storage
RUN chown -R www-data /var/www/storage/framework
RUN chown -R www-data /var/www/storage/framework/sessions

# Set correct permission.
RUN chmod -R 755 /var/www/public
RUN chmod -R 755 /var/www/storage
RUN chmod -R 755 /var/www/storage/logs
RUN chmod -R 755 /var/www/storage/framework
RUN chmod -R 755 /var/www/storage/framework/sessions
RUN chmod -R 755 /var/www/bootstrap

COPY --from=composer:2.3.5 /usr/bin/composer /usr/bin/composer

#Trust root ca
COPY wsc-root.crt /usr/local/share/ca-certificates/wsc-root.crt
RUN chmod 644 /usr/local/share/ca-certificates/wsc-root.crt && update-ca-certificates

ENV PORT=8000
COPY dockerfiles/entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint.sh

USER ${CURRENT_UID}

ENTRYPOINT ["entrypoint.sh"]

